I"Ö
<h1 id="introduction">Introduction</h1>

<p>What is the course about?</p>

<ul>
  <li>The <em>practice</em> of software development</li>
  <li>
    <p>All the things you need to know to</p>

    <ul>
      <li>Figure out what a system should do (requirements)</li>
      <li>Define and analyze the problem (analysis)</li>
      <li>Design a system to solve the problem (design)</li>
      <li>Implement the design (implementation)</li>
      <li>Ensure the quality of the implementation (testing, code review)</li>
      <li>Work in a team</li>
      <li>Planning and estimation (how long will it take?)</li>
    </ul>
  </li>
</ul>

<p>The course will focus on <em>object-oriented</em> software development</p>

<ul>
  <li>The techniques can be adapted for non object-oriented languages</li>
</ul>

<p>Course will emphasize <em>agile</em> software development</p>

<ul>
  <li>Agile software development is an <em>incremental</em> development process</li>
  <li>Develop the system a little bit at a time</li>
  <li>The idea is to make steady progress</li>
  <li>The system is stable and functional at all times</li>
  <li>Don‚Äôt wait until the end of the project to ‚Äúsee if it works‚Äù</li>
</ul>

<h2 id="object-oriented-programming-oop">Object-Oriented Programming (OOP)</h2>

<p>The course will focus on object-oriented software construction using an object-oriented language.</p>

<p>‚ÄúObject-oriented‚Äù means that the software is a collection of objects that interact with each other.</p>

<p>An <em>object</em> is an instance of a class.</p>

<p>A class is a user-defined data type: like a struct in C.</p>

<p>A class defines</p>

<blockquote>
  <p><strong>fields</strong> (member variables): a collection of variables that each object that is an instance of the class will possess</p>

  <p><strong>methods</strong> (member functions): define the behavior of the objects that are instances of the class</p>
</blockquote>

<p>The key to developing good object-oriented software is figuring out what objects/classes you need, and what the <em>behavior</em> of those objects/classes should be!</p>

<blockquote>
  <p>In other words, the important thing is WHAT objects do, not HOW they do it</p>
</blockquote>

<p>This is the distinction between <em>design</em> and <em>implementation</em>:</p>

<blockquote>
  <p>Design is figuring out WHAT the objects should do ‚Äî their behavior</p>

  <p>Implementation is taking the desired behavior and figuring out HOW the behavior should be accomplished</p>
</blockquote>

<p>This course focuses mainly on the design (the WHAT), although the implementation (the HOW) will also be very important since you are required to build a system!</p>
:ET